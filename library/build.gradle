apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: "de.mannodermaus.android-junit5"

android {
    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 30
        compileSdkVersion 30

        testInstrumentationRunner "app.mobilitytechnologies.uitest.CustomAndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    buildFeatures {
        dataBinding = true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }
}

dependencies {
    def androidxTestVersion = '1.3.0'
    def uiautomatorVersion = '2.2.0'
    def espressoVersion = '3.3.0'
    def navigationVersion = '2.3.3'
    def guavaAndroidVersion = '28.1-android'
    def junit5Version = '5.7.1'
    def playServicesMapsVersion = '17.0.0'
    def androidJunit5Version = '1.2.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "androidx.test:rules:$androidxTestVersion"
    implementation "androidx.test:core-ktx:$androidxTestVersion"
    implementation "androidx.test.uiautomator:uiautomator:$uiautomatorVersion"
    implementation "androidx.test.espresso:espresso-core:$espressoVersion"
    implementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "com.google.guava:guava:$guavaAndroidVersion"
    implementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    implementation "com.google.android.gms:play-services-maps:$playServicesMapsVersion"

    androidTestImplementation "de.mannodermaus.junit5:android-test-core:$androidJunit5Version"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:$androidJunit5Version"
    kaptAndroidTest "androidx.databinding:databinding-compiler:$agpVersion"
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                // group と version は jitpack が自動的に付けてくれる
                artifactId = 'gogo-screenshot-android'
                pom {
                    name = 'GOGO Screenshot Test for Android'
                    description = 'A screenshot test library for Android'
                    url = 'https://github.com/MobilityTechnologies/gogo-screenshot-android'
                    licenses {
                        license {
                            name = 'Apache License 2.0'
                            url = 'https://api.github.com/licenses/apache-2.0'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            id = 'MobilityTechnologies'
                            name = 'Mobility Technologies Co., Ltd.'
                        }
                    }
                    scm {
                        connection = 'scm:git://github.com/MobilityTechnologies/gogo-screenshot-android.git'
                        developerConnection = 'scm:git://github.com/MobilityTechnologies/gogo-screenshot-android.git'
                        url = 'git://github.com/MobilityTechnologies/gogo-screenshot-android.git'
                    }
                }
            }
        }
    }
}